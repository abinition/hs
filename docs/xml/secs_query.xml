<func id="secs_query">
  <brief>
     Send a primary SECS II message query and wait for a reply.
  </brief>
  <args>
    <arg id="id" type="int">
      <desc>
         The SECS device Id.
	The SECS device id must be secs_assign()ed to a port handle created by secs_open() or secs_service() or secs_hsms().
      </desc>
    </arg>
    <arg id="stream" type="int">
      <desc>
         The SECS II stream value.
      </desc>
    </arg>
    <arg id="function" type="int">
      <desc>
        The SECS II function value.
      </desc>
    </arg>
    <arg id="data" type="list">
      <desc>
         The SECS II data to send.
      </desc>
    </arg>
  </args>
  <lvalue id="status" type="str">
    <ret id="$ACKNOWLEDGE" status="$ACKNOWLEDGE">
      <desc>
         The SECS message was sent and a reply SECS message received.
      </desc>
    </ret>
    <ret id="0" status="%BOUNDS">
      <desc>
         Device Id is out of range.
      </desc>
    </ret>
    <ret id="0" status="%SECS">
      <desc>
Device id 'x' is not assigned. Use secs_assign(id,fd)
      </desc>
    </ret>
    <ret id="0" status="%SECS">
      <desc>
Cannot query with non-primary function
      </desc>
    </ret>
    <ret id="0" status="%SECS">
      <desc>
No SECS connection (through port 'x') exists for device 'y'
      </desc>
    </ret>
    <ret id="0" status="%SECS">
      <desc>
Failed to send SECS message
      </desc>
    </ret>
  </lvalue>
  <body ref="secs_query.htm" />
  <exceptions>
	<exception status="%TIMEOUT">
	<desc>
	   A timeout occurred before the reply message was received.
	</desc>
	</exception>
  </exceptions>
  <examples>
    <example>
      secs_query.hyp
    </example>
  </examples>
  <links>
<link>secs_event</link>
<link>timeout</link>
  </links>
</func>